/************************************************************************************************/
/** 
 * @file		KsSamplerState.h
 * @brief		サンプラー設定クラス
 * @author		A567W
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSSAMPLERSTATE_H__
#define __KSSAMPLERSTATE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsRenderType.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
ksNS_KS_BEGIN

/************************************************************************************************/
/**
 * @class		KsSamplerState
 * @brief		サンプラー設定クラス
 * @author		A567W
 * @date		----/--/--
 * @since		----/--/--
 * @note		参照カウンタつき
 */
/************************************************************************************************/
class ksENGINE_API KsSamplerState : public KsRefCounter
{
	public:
		/**
		 * コンストラクタ
		 */
											KsSamplerState();

		/**
		 * コンストラクタ
		 */
											KsSamplerState( const KS_SAMPLER_DESC* pSamplerDesc );

		/**
		 * コンストラクタ
		 */
											KsSamplerState( const KS_SAMPLER_DESC& refSamplerDesc );

		/**
		 * デストラクタ
		 */
		virtual								~KsSamplerState();

	protected:
		KS_SAMPLER_DESC						m_samplerDesc;

	public:
		static const KS_SAMPLER_DESC		DEFAULT;
};

ksNS_KS_END

#endif		/* __KSSAMPLERSTATE_H__ */



