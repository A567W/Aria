/************************************************************************************************/
/** 
 * @file		KsShaderData.h
 * @brief		シェーダーデータ
 * @author		A567W
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSSHADERDATA_H__
#define __KSSHADERDATA_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsGraphicsCommon.h"
#include "KsShaderType.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
ksNS_KS_BEGIN

/************************************************************************************************/
/**
 * @class		KsShaderData
 * @brief		シェーダーデータ
 * @author		A567W
 * @date		----/--/--
 * @since		----/--/--
 * @note		
 */
/************************************************************************************************/
class ksENGINE_API KsShaderData : public KsRefCounter
{
		friend class KsShaderManager;
	public:
		/**
		 * コンストラクタ
		 */
									KsShaderData();

		/**
		 * デストラクタ
		 */
		virtual						~KsShaderData();

		/**
		 * シェーダーIDを取得する
		 * @return					シェーダーID
		 */
		KsUInt32					getID() const { return m_id; }

		/**
		 * シェーダー名を取得する
		 * @return					シェーダー名
		 */
		const KsString&				getName() { return m_name; }

	protected:
		KsUInt32					m_id;				/**< シェーダーID		*/
		KsString					m_name;				/**< シェーダー名		*/
};

ksNS_KS_END

#endif		/* __KSSHADERDATA_H__ */

