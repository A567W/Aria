/************************************************************************************************/
/** 
 * @file		KsSamplerState.cpp
 * @brief		サンプラー設定クラス
 * @author		A567W
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsSamplerState.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
ksNS_KS_BEGIN

/************************************************************************************************/
/*
 * デフォルトブレンドステート
 */
/************************************************************************************************/
const KS_SAMPLER_DESC KsSamplerState::DEFAULT = 
{
	KS_FILTER_MIN_MAG_MIP_LINEAR,
	KS_TEXTURE_ADDRESS_CLAMP,
	KS_TEXTURE_ADDRESS_CLAMP,
	KS_TEXTURE_ADDRESS_CLAMP,
	0.0f,
	1,
	KS_COMPARISON_NEVER,
	{ 1.0f, 1.0f, 1.0f, 1.0f },
	-3.402823466e+38F,
	 3.402823466e+38F,
};


/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsSamplerState::KsSamplerState()
{
	KsZeroMemory( &m_samplerDesc, sizeof(KS_SAMPLER_DESC) );
}

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsSamplerState::KsSamplerState( const KS_SAMPLER_DESC* pSamplerDesc )
{
	KsMemCopy( &m_samplerDesc, pSamplerDesc, sizeof(KS_SAMPLER_DESC) );
}

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsSamplerState::KsSamplerState( const KS_SAMPLER_DESC& refSamplerDesc )
	: m_samplerDesc( refSamplerDesc )
{	
}

/************************************************************************************************/
/*
 * デストラクタ
 */
/************************************************************************************************/
KsSamplerState::~KsSamplerState()
{
}

ksNS_KS_END

